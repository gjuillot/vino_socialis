<h1><%= t("bottles.my")%></h1>

<% columns = [
  { att: 'name',                displayed: true,  search_class: 'input-medium', filter: 'text_with_link' },
  { att: 'area',                displayed: true,  search_class: 'input-medium', filter: 'text_with_link' },
  { att: 'wine_color',          displayed: true,  filter: 'color'},
  { att: 'vintage',             displayed: true,  search_class: 'input-mini', filter: 'vintage' },
  { att: 'drink',               displayed: false, search_class: 'input-mini', filter: 'text' },
  { att: 'remaining_quantity',  displayed: true,  search_class: 'input-mini', filter: 'compare' },
  { att: 'price',               displayed: true,  search_class: 'input-mini', filter: 'compare' },
  { att: 'current_value',       displayed: false, search_class: 'input-mini', filter: 'compare' },
  { att: 'date',                displayed: false, search_class: 'input-mini', filter: 'text' },
  { att: 'channel',             displayed: false, search_class: 'input-mini', filter: 'text' },
  { att: 'chancomm',            displayed: false, search_class: 'input-mini', filter: 'text' },
  { att: 'comments',            displayed: false, search_class: 'input-mini', filter: 'text' }
]
%>

<script type="text/javascript">
  function filter() {
    $("tr").each(function() {
      $(this).show();
    });
    
    <% columns.each do |c| %>
      <% if c[:filter] %>
        filter_<%= c[:filter] %>("<%= c[:att] %>");
      <% end %>
    <% end %>
    
  }
  
  function filter_text(input) {
    var searched = $("input#" + input).val();
    if (searched.length > 0) {
      var pattern = new RegExp(".*" + searched + ".*", 'i');
      $("td[id*=" + input + "]").each(function() {
        var wine_value = $(this).html();
        if (!(pattern.test(wine_value))) {
          $(this).parent().hide();
        }
      });
    }
  }
  
  function filter_text_with_link(input) {
    var searched = $("input#" + input).val();
    if (searched.length > 0) {
      var pattern = new RegExp(".*<a.*>[^<]*" + searched + "[^<]*</a>.*", 'i');
      $("td[id*=" + input + "]").each(function() {
        var wine_value = $(this).html();
        if (!(pattern.test(wine_value))) {
          $(this).parent().hide();
        }
      });
    }
  }
  
  function filter_color(select) {
    var color = $("select#wine_color").val();
    if (color.length > 0) {
      var pattern6 = new RegExp('.*\/'+color+'.*\.png');
      $("td[id*=wine_color] a img").each(function() {
        var color_src = $(this).attr('src');
        if (!(pattern6.test(color_src))) {
          $(this).parent().parent().parent().hide();
        }
      });
    }
  }
  
  function filter_vintage(input) {
    var vintage = $("input#vintage").val();
    if (vintage.length > 0) {
      $("td[id*=vintage] span").each(function() {
        var wine_vintage = parseInt($(this).html());
        if (vintage.charAt(0) == '<') {
          if (vintage.length == 5) {
            vintageInt = parseInt(vintage.substring(1));
            if (!(wine_vintage < vintageInt)) {
              $(this).parent().parent().hide();
            }
          }
        } else if (vintage.charAt(0) == '>') {
          if (vintage.length == 5) {
            vintageInt = parseInt(vintage.substring(1));
            if (!(wine_vintage > vintageInt)) {
              $(this).parent().parent().hide();
            }
          }
        } else if (vintage.length == 4) {
          if (!($(this).html() == vintage)) {
            $(this).parent().parent().hide();
          }
        } else if (vintage == '-') {
          if (!($(this).html() == vintage)) {
            $(this).parent().parent().hide();
          }
        }
      });
    }
  }
  
  function filter_compare(input) {
    var searched = $("input#" + input).val();
    if (searched.length > 0) {
      $("td[id*=" + input + "] span#raw").each(function() {
        var wine_searched_value = parseFloat($(this).html());
        if (searched.charAt(0) == '<') {
          if (searched.length > 1) {
            searchedFloat = parseFloat(searched.substring(1));
            if (!(wine_searched_value < searchedFloat)) {
              $(this).parent().parent().hide();
            }
          }
        } else if (searched.charAt(0) == '>') {
          if (searched.length > 1) {
            searchedFloat = parseFloat(searched.substring(1));
            if (!(wine_searched_value > searchedFloat)) {
              $(this).parent().parent().hide();
            }
          }
        } else {
          if (!($(this).html() == searched)) {
            $(this).parent().parent().hide();
          }
        }
      });
    }
  }
  
  function column(att) {
    if ($("input#"+att+"_column").is(':checked')) {
      $("td[id*="+att+"]").show();
      $("th#"+att).show();
    } else {
      $("th#"+att).hide();
      $("td[id*="+att+"]").hide();
    }
  }
  
  $(document).ready(function() {
<% columns.each do |c| %>
    $("input#<%= c[:att] %>").keyup(filter);
<% end %>
    $("select#wine_color").change(filter);
    
    $("tr#bottle").click(function() {
      window.location = $(this).find("input").val();
    });
    
    $("select#racks").change(function(){
      var rack = $(this).val();
      if (rack == 0) {
        window.location = '<%= bottles_path %>'
      } if (rack == -1) {
        window.location = '<%= not_placed_bottles_path %>'
      } else {
        window.location = '<%= bottles_path %>?wine_rack_id=' + rack;
      }
    });
    
<% columns.each do |c| %>
    column("<%= c[:att] %>");
    $("input#<%= c[:att] %>_column").change(function() {column("<%= c[:att] %>");});
<% end %>

  });
</script>

<a href="#" data-toggle="collapse" data-target="#help">Aide pour la recherche</a> - 
<%= link_to t('bottles.new'), new_bottle_path %> - 
<select id="racks">
  <option value="0">Toutes les bouteilles</option>
  <%= options_for_select(@racks.map {|r| [r.name, r.id]}, :selected => params[:wine_rack_id]) %>
  <option value="-1"<%= @not_placed ? ' selected="selected"' : '' %>>Non placées</option>
</select>
<div class="btn-group pull-right">
  <a class="btn dropdown-toggle" data-toggle="dropdown" href="#"> Colonnes <span class="caret"></span> </a>
  <ul class="dropdown-menu">
    <% columns.each do |c| %>
      <label class="checkbox"><input type="checkbox" id="<%= c[:att] %>_column" <%= c[:displayed] ? 'checked="checked"' : '' %>> <%= t(c[:att], scope: 'helpers.label.bottle') %></label>
    <% end %>
  </ul>
</div>
     
<div id="help" class="collapse">
  <div class="well well-small">
    Exemples de recherche pour les champs 'Millésime', 'Reste', 'Prix' et 'Cote':<br />
    <ul>
      <li>1981</li>
      <li>&lt;1981</li>
      <li>&gt;1981</li>
    </ul>
  </div>
</div>

<br />

<table class="table table-striped table-condensed">
	<thead>
	  <tr>
	    
<% columns.each do |c| %>
      <th style="text-align:center;" id="<%= c[:att] %>">
        <%= link_to content_tag(:i, "", class: "icon-chevron-up pull-left"), bottles_path(:order_attribute => c[:att], :order_sens => 'ASC') %>
        <%= t(c[:att], scope: 'helpers.label.bottle') %>
        <%= link_to content_tag(:i, "", class: "icon-chevron-down pull-right"), bottles_path(:order_attribute => c[:att], :order_sens => 'DESC') %>
        <br />
        <div class="input-prepend">
          <% if c[:att] == 'wine_color' %>
            <select id="wine_color" class="input-prepend span2">
              <option value="">Tous</option>
              <%= options_for_select(Wine::COLORS.map {|c| [t("wine.color.#{c}"), c]}) %>
            </select>
          <% else %>
            <span class="add-on"><i class="icon-search"></i></span><input type="text" id="<%= c[:att] %>" autocomplete='off' id="prependedInput" class="<%= c[:search_class] %>"/>
          <% end %>
        </div>
      </th>
<% end %>
	    
	  </tr>
	</thead>
	<tbody>
	  <%= render @bottles %>
  </tbody>
</table>
